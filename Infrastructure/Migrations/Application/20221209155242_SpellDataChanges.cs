using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Infrastructure.Migrations.Application
{
    /// <inheritdoc />
    public partial class SpellDataChanges : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "SpellDataTable_GreatAxe",
                schema: "NewWorld");

            migrationBuilder.DropTable(
                name: "SpellDataTable_IceMagic",
                schema: "NewWorld");

            migrationBuilder.DropTable(
                name: "SpellDataTable_Runes",
                schema: "NewWorld");

            migrationBuilder.CreateTable(
                name: "SpellDataTable",
                schema: "NewWorld",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SpellID = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StatusEffects = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StatusEffectDurations = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Revive = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Siphon = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AttachToOwner = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StickWhenAttached = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StoreOffsetWhenStuckToGDE = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseDirectTargetAsAttachOwner = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnSecondaryOnElapsed = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpawnSecondaryOnCollision = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EndOnCasterDeath = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IgnoreTargetIfAtDeathsDoor = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IgnoreTargetIfDead = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseCameraTargetLock = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TrackNumInVolume = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ClearOnExit = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ClearOnEnd = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ManaCost = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UseStatusEffectDuration = table.Column<bool>(type: "bit", nullable: true),
                    Duration = table.Column<int>(type: "int", nullable: true),
                    DurationScaling = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Height = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Length = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Radius = table.Column<double>(type: "float", nullable: true),
                    InnerRadius = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RadiusScaling = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaxRadiusScaling = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CastDistance = table.Column<double>(type: "float", nullable: true),
                    CastHeight = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CastRadius = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConeAngle = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConeWidth = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ChannelTime = table.Column<double>(type: "float", nullable: true),
                    ChainDelayDuration = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MaxChainNum = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseChainCasterPaperdoll = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpawnBeamCasterJoint = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    NumToSpawn = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    NumToSpawnBeforeFail = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpawnRate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SpawnAngle = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SecondarySpellProjectileLaunchAngles = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondaryProjectileLaunchMinZSpeeds = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondaryProjectileLaunchMaxZSpeeds = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondaryProjectileLaunchZOffset = table.Column<double>(type: "float", nullable: true),
                    IgnoreRotationForSecondaryProjectileLaunchZSpd = table.Column<bool>(type: "bit", nullable: true),
                    ScaleWithCharacterBoundingBox = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ScaleWithDynamicScale = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TargetTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpellTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CastingTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    HitAiTarget = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OverrideTargetForAiThreat = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ShapeTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DamageType = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CheckObstructions = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IgnoreOverheadCollision = table.Column<bool>(type: "bit", nullable: true),
                    IgnoreStructures = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IgnoreSelf = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsUnaffiliated = table.Column<bool>(type: "bit", nullable: true),
                    WeaponSlotOverride = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    RangedAttackProfile = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    RangedAttackName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    FireJointName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjPosOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProjPosOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProjPosOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProjRotOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProjRotOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProjRotOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CharRelPosOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CharRelPosOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CharRelPosOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CharRelRotOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CharRelRotOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CharRelRotOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ProjRaycastOrientation = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    BaseDamage = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DamageTable = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DamageTableRow = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    AbilityId = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TargetAbilityCondition = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    BeamEffect = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IndicatorVFX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpellPrefabPath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondaryPrefabPath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondarySpellID = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TertiaryPrefabPath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TertiarySpellID = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    AmmoSlot = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnSecondaryOnPassthrough = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOn = table.Column<DateTime>(type: "datetime2", nullable: false),
                    LastModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    LastModifiedOn = table.Column<DateTime>(type: "datetime2", nullable: true),
                    DeletedOn = table.Column<DateTime>(type: "datetime2", nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SpellDataTable", x => x.Id);
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "SpellDataTable",
                schema: "NewWorld");

            migrationBuilder.CreateTable(
                name: "SpellDataTable_GreatAxe",
                schema: "NewWorld",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AbilityId = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    AttachToOwner = table.Column<bool>(type: "bit", nullable: true),
                    BaseDamage = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    BeamEffect = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CastDistance = table.Column<int>(type: "int", nullable: true),
                    CastHeight = table.Column<int>(type: "int", nullable: true),
                    CastRadius = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CastingTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ChainDelayDuration = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ChannelTime = table.Column<int>(type: "int", nullable: true),
                    CharRelPosOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelPosOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelPosOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelRotOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelRotOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelRotOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CheckObstructions = table.Column<bool>(type: "bit", nullable: true),
                    ClearOnEnd = table.Column<bool>(type: "bit", nullable: true),
                    ClearOnExit = table.Column<bool>(type: "bit", nullable: true),
                    ConeAngle = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ConeWidth = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOn = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DamageTable = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DamageTableRow = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DamageType = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DeletedOn = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Duration = table.Column<int>(type: "int", nullable: true),
                    DurationScaling = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    EndOnCasterDeath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    FireJointName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Height = table.Column<int>(type: "int", nullable: true),
                    HitAiTarget = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IgnoreOverheadCollision = table.Column<bool>(type: "bit", nullable: true),
                    IgnoreSelf = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IgnoreStructures = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IgnoreTargetIfAtDeathsDoor = table.Column<bool>(type: "bit", nullable: true),
                    IgnoreTargetIfDead = table.Column<bool>(type: "bit", nullable: true),
                    IndicatorVFX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    InnerRadius = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    LastModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    LastModifiedOn = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Length = table.Column<int>(type: "int", nullable: true),
                    ManaCost = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    MaxChainNum = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    MaxRadiusScaling = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    NumToSpawn = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    NumToSpawnBeforeFail = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    OverrideTargetForAiThreat = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjPosOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjPosOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjPosOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjRaycastOrientation = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjRotOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjRotOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjRotOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Radius = table.Column<double>(type: "float", nullable: true),
                    RadiusScaling = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    RangedAttackName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    RangedAttackProfile = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Revive = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ScaleWithCharacterBoundingBox = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ScaleWithDynamicScale = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondaryPrefabPath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondarySpellID = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondarySpellProjectileLaunchAngles = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ShapeTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Siphon = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnAngle = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnRate = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnSecondaryOnCollision = table.Column<bool>(type: "bit", nullable: true),
                    SpawnSecondaryOnElapsed = table.Column<bool>(type: "bit", nullable: true),
                    SpellID = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpellPrefabPath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpellTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StatusEffectDurations = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StatusEffects = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StickWhenAttached = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StoreOffsetWhenStuckToGDE = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TargetAbilityCondition = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TargetTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TertiaryPrefabPath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TertiarySpellID = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TrackNumInVolume = table.Column<bool>(type: "bit", nullable: true),
                    UseCameraTargetLock = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UseChainCasterPaperdoll = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UseDirectTargetAsAttachOwner = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UseStatusEffectDuration = table.Column<bool>(type: "bit", nullable: true),
                    WeaponSlotOverride = table.Column<string>(type: "nvarchar(max)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SpellDataTable_GreatAxe", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "SpellDataTable_IceMagic",
                schema: "NewWorld",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AbilityId = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    AttachToOwner = table.Column<bool>(type: "bit", nullable: true),
                    BaseDamage = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    BeamEffect = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CastDistance = table.Column<double>(type: "float", nullable: true),
                    CastHeight = table.Column<int>(type: "int", nullable: true),
                    CastRadius = table.Column<int>(type: "int", nullable: true),
                    CastingTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ChainDelayDuration = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ChannelTime = table.Column<int>(type: "int", nullable: true),
                    CharRelPosOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelPosOffsetY = table.Column<int>(type: "int", nullable: true),
                    CharRelPosOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelRotOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelRotOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelRotOffsetZ = table.Column<int>(type: "int", nullable: true),
                    CheckObstructions = table.Column<bool>(type: "bit", nullable: true),
                    ClearOnEnd = table.Column<bool>(type: "bit", nullable: false),
                    ClearOnExit = table.Column<bool>(type: "bit", nullable: true),
                    ConeAngle = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ConeWidth = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOn = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DamageTable = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DamageTableRow = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DamageType = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DeletedOn = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Duration = table.Column<int>(type: "int", nullable: false),
                    DurationScaling = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    EndOnCasterDeath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    FireJointName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Height = table.Column<double>(type: "float", nullable: true),
                    HitAiTarget = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IgnoreOverheadCollision = table.Column<bool>(type: "bit", nullable: true),
                    IgnoreSelf = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IgnoreStructures = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IgnoreTargetIfAtDeathsDoor = table.Column<bool>(type: "bit", nullable: true),
                    IgnoreTargetIfDead = table.Column<bool>(type: "bit", nullable: true),
                    IndicatorVFX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    InnerRadius = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    LastModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    LastModifiedOn = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Length = table.Column<double>(type: "float", nullable: true),
                    ManaCost = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    MaxChainNum = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    MaxRadiusScaling = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    NumToSpawn = table.Column<int>(type: "int", nullable: true),
                    NumToSpawnBeforeFail = table.Column<int>(type: "int", nullable: true),
                    OverrideTargetForAiThreat = table.Column<bool>(type: "bit", nullable: true),
                    ProjPosOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjPosOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjPosOffsetZ = table.Column<int>(type: "int", nullable: true),
                    ProjRaycastOrientation = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjRotOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjRotOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjRotOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Radius = table.Column<double>(type: "float", nullable: true),
                    RadiusScaling = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    RangedAttackName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    RangedAttackProfile = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Revive = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ScaleWithCharacterBoundingBox = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ScaleWithDynamicScale = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondaryPrefabPath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondarySpellID = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondarySpellProjectileLaunchAngles = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ShapeTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Siphon = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnAngle = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnRate = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnSecondaryOnCollision = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnSecondaryOnElapsed = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpellID = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpellPrefabPath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpellTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StatusEffectDurations = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StatusEffects = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StickWhenAttached = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StoreOffsetWhenStuckToGDE = table.Column<bool>(type: "bit", nullable: true),
                    TargetAbilityCondition = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TargetTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TertiaryPrefabPath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TertiarySpellID = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TrackNumInVolume = table.Column<bool>(type: "bit", nullable: true),
                    UseCameraTargetLock = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UseChainCasterPaperdoll = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UseDirectTargetAsAttachOwner = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UseStatusEffectDuration = table.Column<bool>(type: "bit", nullable: false),
                    WeaponSlotOverride = table.Column<string>(type: "nvarchar(max)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SpellDataTable_IceMagic", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "SpellDataTable_Runes",
                schema: "NewWorld",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AbilityId = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    AttachToOwner = table.Column<bool>(type: "bit", nullable: true),
                    BaseDamage = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    BeamEffect = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CastDistance = table.Column<int>(type: "int", nullable: false),
                    CastHeight = table.Column<int>(type: "int", nullable: true),
                    CastRadius = table.Column<int>(type: "int", nullable: true),
                    CastingTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ChainDelayDuration = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ChannelTime = table.Column<int>(type: "int", nullable: false),
                    CharRelPosOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelPosOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelPosOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelRotOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelRotOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CharRelRotOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CheckObstructions = table.Column<bool>(type: "bit", nullable: false),
                    ClearOnEnd = table.Column<bool>(type: "bit", nullable: true),
                    ClearOnExit = table.Column<bool>(type: "bit", nullable: true),
                    ConeAngle = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ConeWidth = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOn = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DamageTable = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DamageTableRow = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DamageType = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DeletedOn = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Duration = table.Column<int>(type: "int", nullable: false),
                    DurationScaling = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    EndOnCasterDeath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    FireJointName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Height = table.Column<int>(type: "int", nullable: true),
                    HitAiTarget = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IgnoreOverheadCollision = table.Column<bool>(type: "bit", nullable: false),
                    IgnoreSelf = table.Column<bool>(type: "bit", nullable: false),
                    IgnoreStructures = table.Column<bool>(type: "bit", nullable: false),
                    IgnoreTargetIfAtDeathsDoor = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IgnoreTargetIfDead = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    IndicatorVFX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    InnerRadius = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    LastModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    LastModifiedOn = table.Column<DateTime>(type: "datetime2", nullable: true),
                    Length = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ManaCost = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    MaxChainNum = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    MaxRadiusScaling = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    NumToSpawn = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    NumToSpawnBeforeFail = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    OverrideTargetForAiThreat = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjPosOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjPosOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjPosOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjRaycastOrientation = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjRotOffsetX = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjRotOffsetY = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ProjRotOffsetZ = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Radius = table.Column<int>(type: "int", nullable: true),
                    RadiusScaling = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    RangedAttackName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    RangedAttackProfile = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Revive = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ScaleWithCharacterBoundingBox = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ScaleWithDynamicScale = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondaryPrefabPath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondarySpellID = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SecondarySpellProjectileLaunchAngles = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    ShapeTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Siphon = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnAngle = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnRate = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnSecondaryOnCollision = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnSecondaryOnElapsed = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpawnSecondaryOnPassthrough = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpellID = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpellPrefabPath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    SpellTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StatusEffectDurations = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StatusEffects = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StickWhenAttached = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    StoreOffsetWhenStuckToGDE = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TargetAbilityCondition = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TargetTypes = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TertiaryPrefabPath = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TertiarySpellID = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    TrackNumInVolume = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UseCameraTargetLock = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UseChainCasterPaperdoll = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UseDirectTargetAsAttachOwner = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UseStatusEffectDuration = table.Column<bool>(type: "bit", nullable: false),
                    WeaponSlotOverride = table.Column<string>(type: "nvarchar(max)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SpellDataTable_Runes", x => x.Id);
                });
        }
    }
}
