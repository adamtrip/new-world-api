// <auto-generated />
using System;
using Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations.Application
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221209161534_DamageTableTypes2")]
    partial class DamageTableTypes2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("App")
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.AIAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivationCooldown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllowSelfDamageForHitEvents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<double?>("BaseDamageReduction")
                        .HasColumnType("float");

                    b.Property<double?>("BlockDamage")
                        .HasColumnType("float");

                    b.Property<double?>("BlockDamageReduction")
                        .HasColumnType("float");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOwnedStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownTimer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CritChance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CritDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsMelee")
                        .HasColumnType("bit");

                    b.Property<string>("DamageIsRanged")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistFromDefender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DmgPctToHealth")
                        .HasColumnType("float");

                    b.Property<bool?>("DoNotUnequipSelfAppliedSE")
                        .HasColumnType("bit");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ForceStatusEffectDamageTableRow")
                        .HasColumnType("bit");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InActionTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsActiveAbility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsGlobalAbility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsStackableAbility")
                        .HasColumnType("bit");

                    b.Property<double?>("Knockback")
                        .HasColumnType("float");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LinearlyScaleToDistance")
                        .HasColumnType("int");

                    b.Property<string>("Mana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManaRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxConsecutiveHits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyHealthPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumConsecutiveHits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumStatusEffectStacksToRemove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumStatusEffectsToRemove")
                        .HasColumnType("int");

                    b.Property<string>("NumSuccessfulHits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnContributedKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCritTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnEventPassiveConditionsPass")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHasDied")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHealthChanged")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitBehind")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnStatusEffectApplied")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetSet")
                        .HasColumnType("bit");

                    b.Property<string>("OnlyChangeOwnedStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerLevelOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetConsecutiveOnSuccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SelfApplyStatusEffectDurations")
                        .HasColumnType("int");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SetMannequinTagStatus")
                        .HasColumnType("bit");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("StaggerDamage")
                        .HasColumnType("float");

                    b.Property<double?>("StaggerDamageReduction")
                        .HasColumnType("float");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectBeingApplied")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectStackSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHealthPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackHitCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreeColumnPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreeRowPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AIAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.AttributeThresholdAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ActivationCooldown")
                        .HasColumnType("int");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Azoth")
                        .HasColumnType("int");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<double?>("BaseDamageReduction")
                        .HasColumnType("float");

                    b.Property<double?>("BlockDamage")
                        .HasColumnType("float");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ConsumableHealMod")
                        .HasColumnType("float");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CritChance")
                        .HasColumnType("float");

                    b.Property<double?>("CritDamage")
                        .HasColumnType("float");

                    b.Property<double?>("CritDamageReduction")
                        .HasColumnType("float");

                    b.Property<string>("DamageCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsMelee")
                        .HasColumnType("bit");

                    b.Property<string>("DamageIsRanged")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistFromDefender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DmgPctToHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DoNotUnequipSelfAppliedSE")
                        .HasColumnType("bit");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<double?>("ElementalArmor")
                        .HasColumnType("float");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("FastTravelAzothCostMod")
                        .HasColumnType("float");

                    b.Property<double?>("FastTravelInnCooldownMod")
                        .HasColumnType("float");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GatheringTradeskill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GiveAzothPercentChance")
                        .HasColumnType("float");

                    b.Property<double?>("HeadshotDamage")
                        .HasColumnType("float");

                    b.Property<double?>("HealScalingValueMultiplier")
                        .HasColumnType("float");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HitFromBehindDamage")
                        .HasColumnType("float");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IgnoreDisabledAttackTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InActionTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsActiveAbility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsGlobalAbility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNonCombatAbility")
                        .HasColumnType("bit");

                    b.Property<string>("IsStackableAbility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Mana")
                        .HasColumnType("float");

                    b.Property<string>("ManaRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxConsecutiveHits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MaxMana")
                        .HasColumnType("float");

                    b.Property<int?>("ModifySelfApplyStatusEffectDuration")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumConsecutiveHits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnContributedKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCritTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnGatheringComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHealed")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitBehind")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnSelfDamage")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetSet")
                        .HasColumnType("bit");

                    b.Property<string>("OnlyChangeOwnedStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PhysicalArmor")
                        .HasColumnType("float");

                    b.Property<double?>("PhysicalArmorMaxHealthMod")
                        .HasColumnType("float");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RefundAmmoPercentChance")
                        .HasColumnType("float");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RepairDustYieldMod")
                        .HasColumnType("float");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetConsecutiveOnSuccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("StaggerDamage")
                        .HasColumnType("float");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaminaCostFlatMod")
                        .HasColumnType("int");

                    b.Property<string>("StaminaCostList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TargetStatusEffectDurationMult")
                        .HasColumnType("float");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ToolDurabilityLossMod")
                        .HasColumnType("float");

                    b.Property<string>("TrackHitCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreeColumnPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreeRowPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AttributeThresholdAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.BlunderbussAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivationCooldown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<string>("BaseDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CritChance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CritDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageIsMelee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsRanged")
                        .HasColumnType("bit");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistFromDefender")
                        .HasColumnType("int");

                    b.Property<string>("DmgPctToHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DoNotUnequipSelfAppliedSE")
                        .HasColumnType("bit");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipWhenUnsheathed")
                        .HasColumnType("int");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ForceStatusEffectDamageTableRow")
                        .HasColumnType("bit");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InActionTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinearlyScaleToDistance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoadedAmmoCount")
                        .HasColumnType("int");

                    b.Property<string>("LoadedAmmoCountComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfHitsComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfTrackedHits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnStatusEffectApplied")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredEquippedAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResetConsecutiveOnSuccess")
                        .HasColumnType("int");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectBeingApplied")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableIdForRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetStatusEffectStackSize")
                        .HasColumnType("int");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlunderbussAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.BowAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ActivationCooldown")
                        .HasColumnType("int");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<string>("BaseDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CritChance")
                        .HasColumnType("float");

                    b.Property<string>("CritDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageIsMelee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsRanged")
                        .HasColumnType("bit");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistFromDefender")
                        .HasColumnType("int");

                    b.Property<double?>("DmgPctToHealth")
                        .HasColumnType("float");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipWhenUnsheathed")
                        .HasColumnType("int");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ForceStatusEffectDamageTableRow")
                        .HasColumnType("bit");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HeadshotDamage")
                        .HasColumnType("float");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IgnoreResetConsecutiveOnDeath")
                        .HasColumnType("bit");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InActionTime")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<int?>("ModifySelfApplyStatusEffectDuration")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyHealthPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumAroundMe")
                        .HasColumnType("int");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnWeaponSwap")
                        .HasColumnType("bit");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RefundAmmoPercentChance")
                        .HasColumnType("float");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredEquippedAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ResetConsecutiveOnSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TargetStatusEffectDurationMult")
                        .HasColumnType("float");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BowAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.FireMagicAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivationCooldown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<string>("BaseDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CritChance")
                        .HasColumnType("float");

                    b.Property<double?>("CritDamage")
                        .HasColumnType("float");

                    b.Property<bool?>("DamageIsMelee")
                        .HasColumnType("bit");

                    b.Property<bool?>("DamageIsRanged")
                        .HasColumnType("bit");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableStatusEffectOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistFromDefender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DmgPctToHealth")
                        .HasColumnType("float");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipWhenUnsheathed")
                        .HasColumnType("int");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ForceStatusEffectDamageTableRow")
                        .HasColumnType("bit");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InActionTime")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Mana")
                        .HasColumnType("float");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<int?>("ModifySelfApplyStatusEffectDuration")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfHitsComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfTrackedHits")
                        .HasColumnType("int");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<string>("OnWeaponSwap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredEquippedAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetConsecutiveOnSuccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TargetStatusEffectDurationMult")
                        .HasColumnType("float");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UISpellForManaCheck")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FireMagicAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.GlobalAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilitiesOnCooldown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityCooldownComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityIdToCheckForTrackedHits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityOnCooldownOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ActivationCooldown")
                        .HasColumnType("float");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllowSelfDamageForHitEvents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ArmorPenetration")
                        .HasColumnType("float");

                    b.Property<string>("AttachedTargetSpellIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackerVitalsCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Azoth")
                        .HasColumnType("int");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<double?>("BaseDamageReduction")
                        .HasColumnType("float");

                    b.Property<double?>("BlockDamage")
                        .HasColumnType("float");

                    b.Property<double?>("BlockDamageReduction")
                        .HasColumnType("float");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CanBeUnapplied")
                        .HasColumnType("bit");

                    b.Property<string>("CanBlockRangedOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOwnedStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CheckStatusEffectsOnTargetOwned")
                        .HasColumnType("bit");

                    b.Property<string>("ConsumableCooldownForReset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CritArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CritChance")
                        .HasColumnType("float");

                    b.Property<double?>("CritDamage")
                        .HasColumnType("float");

                    b.Property<double?>("CritDamageReduction")
                        .HasColumnType("float");

                    b.Property<string>("DamageCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsMelee")
                        .HasColumnType("bit");

                    b.Property<bool?>("DamageIsRanged")
                        .HasColumnType("bit");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableStatusEffectOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisableApplyPerStatusEffectStack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DisableCastSpellDurability")
                        .HasColumnType("bit");

                    b.Property<bool?>("DisableConsecutivePotency")
                        .HasColumnType("bit");

                    b.Property<string>("DisableScalePerTargetSEStack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistFromDefender")
                        .HasColumnType("int");

                    b.Property<double?>("DmgPctToHealth")
                        .HasColumnType("float");

                    b.Property<bool?>("DoNotUnequipSelfAppliedSE")
                        .HasColumnType("bit");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EnableTaunt")
                        .HasColumnType("bit");

                    b.Property<string>("EquipLoadCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipWhenUnsheathed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExcludeFromGameModes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FastTravelAzothCostMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FastTravelInnCooldownMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ForceStatusEffectDamageTableRow")
                        .HasColumnType("bit");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GatheringTradeskill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GiveAzothPercentChance")
                        .HasColumnType("float");

                    b.Property<bool?>("HasGritActive")
                        .HasColumnType("bit");

                    b.Property<double?>("HeadshotArmorPenetration")
                        .HasColumnType("float");

                    b.Property<double?>("HeadshotDamage")
                        .HasColumnType("float");

                    b.Property<double?>("HealScalingValueMultiplier")
                        .HasColumnType("float");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthPenaltyPerStackRemoved")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HitFromBehindArmorPenetration")
                        .HasColumnType("float");

                    b.Property<double?>("HitFromBehindDamage")
                        .HasColumnType("float");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IgnoreDisabledAttackTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IgnoreResetConsecutiveOnDeath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InActionTime")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<string>("IsConsumableIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInCombatState")
                        .HasColumnType("bit");

                    b.Property<string>("IsNotConsumableIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNotInCombatState")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStackableAbility")
                        .HasColumnType("bit");

                    b.Property<double?>("Knockback")
                        .HasColumnType("float");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinearlyScaleToDistance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoadedAmmoCount")
                        .HasColumnType("int");

                    b.Property<string>("LoadedAmmoCountComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Mana")
                        .HasColumnType("float");

                    b.Property<string>("ManaCostList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManaCostMult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManaRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<double?>("MaxHealth")
                        .HasColumnType("float");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MaxMana")
                        .HasColumnType("float");

                    b.Property<string>("MaxNumAroundMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<int?>("ModifySelfApplyStatusEffectDuration")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("MyManaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyManaPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyStaminaPercent")
                        .HasColumnType("int");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumAroundMe")
                        .HasColumnType("int");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumStatusEffectStacksToRemove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumStatusEffectsToRemove")
                        .HasColumnType("int");

                    b.Property<int?>("NumStatusEffectsToTransfer")
                        .HasColumnType("int");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<int?>("NumTargetStatusEffectsToRemove")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfHitsComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfTrackedHits")
                        .HasColumnType("int");

                    b.Property<bool?>("OnAttachedSpellTargetDied")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnContributedKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCritTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnEventConditionalActivationChance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnEventPassiveConditionsPass")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnGatheringComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHasDied")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHealed")
                        .HasColumnType("bit");

                    b.Property<string>("OnHealthChanged")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitBehind")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTakenWhileInvulnerable")
                        .HasColumnType("bit");

                    b.Property<string>("OnInActionLongEnough")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnProjPassedThrough")
                        .HasColumnType("bit");

                    b.Property<string>("OnSelfDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnStatusEffectApplied")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetStatusEffectRemoved")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnUsedConsumable")
                        .HasColumnType("bit");

                    b.Property<string>("OnWeaponSwap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnlyChangeOwnedStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherApplyStatusEffectDurations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnSelf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnSelfMax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PerStatusEffectOnTarget")
                        .HasColumnType("bit");

                    b.Property<int?>("PerStatusEffectOnTargetMax")
                        .HasColumnType("int");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmorMaxHealthMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RefundAmmoPercentChance")
                        .HasColumnType("float");

                    b.Property<double?>("RefundConsumablePercentChance")
                        .HasColumnType("float");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepairDustYieldMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredEquippedAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ResetConsecutiveOnSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("ResetConsumableCooldowns")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetTrackedOnSuccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffectDurations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetHealthOnFatalDamageTaken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Stamina")
                        .HasColumnType("int");

                    b.Property<string>("StaminaCostFlatMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaminaCostList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectBeingApplied")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoryToTransfer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusEffectDurationMod")
                        .HasColumnType("int");

                    b.Property<double?>("StatusEffectDurationMult")
                        .HasColumnType("float");

                    b.Property<double?>("StatusEffectDurationReduction")
                        .HasColumnType("float");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusEffectStackSize")
                        .HasColumnType("int");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TargetHasGritActive")
                        .HasColumnType("bit");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TargetStatusEffectDurationMult")
                        .HasColumnType("float");

                    b.Property<int?>("TargetStatusEffectStackSize")
                        .HasColumnType("int");

                    b.Property<string>("TargetVitalsCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ThreatDamage")
                        .HasColumnType("float");

                    b.Property<string>("ToolDurabilityLossMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<string>("TreeColumnPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreeRowPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("UseMinAttackInfoForSelfAppliedSE")
                        .HasColumnType("bit");

                    b.Property<double?>("WeaponAccuracy")
                        .HasColumnType("float");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GlobalAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.GreatAxeAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ArmorPenetration")
                        .HasColumnType("float");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<double?>("BaseDamageReduction")
                        .HasColumnType("float");

                    b.Property<string>("BlockDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownTimer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CritChance")
                        .HasColumnType("float");

                    b.Property<double?>("CritDamage")
                        .HasColumnType("float");

                    b.Property<string>("DamageIsMelee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageIsRanged")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistFromDefender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DmgPctToHealth")
                        .HasColumnType("float");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasGritActive")
                        .HasColumnType("bit");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InActionTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxNumAroundMe")
                        .HasColumnType("int");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyHealthPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumAroundMe")
                        .HasColumnType("int");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfHitsComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfTrackedHits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetConsecutiveOnSuccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GreatAxeAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.GreatswordAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilitiesOnCooldown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityCooldownComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityIdToCheckForTrackedHits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityOnCooldownOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ActivationCooldown")
                        .HasColumnType("float");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ArmorPenetration")
                        .HasColumnType("float");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<double?>("BaseDamageReduction")
                        .HasColumnType("float");

                    b.Property<double?>("BlockDamage")
                        .HasColumnType("float");

                    b.Property<double?>("BlockDamageReduction")
                        .HasColumnType("float");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CanBlockRangedOverride")
                        .HasColumnType("bit");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOwnedStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckStatusEffectsOnTargetOwned")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CritChance")
                        .HasColumnType("float");

                    b.Property<double?>("CritDamage")
                        .HasColumnType("float");

                    b.Property<string>("CritDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsMelee")
                        .HasColumnType("bit");

                    b.Property<string>("DamageIsRanged")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DisableApplyPerStatusEffectStack")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistFromDefender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DmgPctToHealth")
                        .HasColumnType("float");

                    b.Property<string>("DoNotUnequipSelfAppliedSE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EquipWhenUnsheathed")
                        .HasColumnType("bit");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ForceStatusEffectDamageTableRow")
                        .HasColumnType("bit");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InActionTime")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInCombatState")
                        .HasColumnType("bit");

                    b.Property<string>("IsNotInCombatState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("MyMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyStaminaPercent")
                        .HasColumnType("int");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumStatusEffectStacksToRemove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumStatusEffectsToRemove")
                        .HasColumnType("int");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfHitsComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfTrackedHits")
                        .HasColumnType("int");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCritTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHealed")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHealthChanged")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitBehind")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnInActionLongEnough")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnStatusEffectApplied")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnWeaponSwap")
                        .HasColumnType("bit");

                    b.Property<string>("OnlyChangeOwnedStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PerStatusEffectOnSelf")
                        .HasColumnType("bit");

                    b.Property<int?>("PerStatusEffectOnSelfMax")
                        .HasColumnType("int");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerLevelOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredEquippedAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetConsecutiveOnSuccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ResetTrackedOnSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Stamina")
                        .HasColumnType("int");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectBeingApplied")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusEffectDurationMod")
                        .HasColumnType("int");

                    b.Property<double?>("StatusEffectDurationMult")
                        .HasColumnType("float");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusEffectStackSize")
                        .HasColumnType("int");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ThreatDamage")
                        .HasColumnType("float");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UISpellForManaCheck")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("UnlockDefault")
                        .HasColumnType("bit");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GreatswordAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.HatchetAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AllowSelfDamageForHitEvents")
                        .HasColumnType("bit");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<string>("BaseDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CritChance")
                        .HasColumnType("float");

                    b.Property<string>("CritDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsMelee")
                        .HasColumnType("bit");

                    b.Property<bool?>("DamageIsRanged")
                        .HasColumnType("bit");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistFromDefender")
                        .HasColumnType("int");

                    b.Property<string>("DmgPctToHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EquipWhenUnsheathed")
                        .HasColumnType("bit");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InActionTime")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LinearlyScaleToDistance")
                        .HasColumnType("int");

                    b.Property<string>("Mana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxNumAroundMe")
                        .HasColumnType("int");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumAroundMe")
                        .HasColumnType("int");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnFatalDamageTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitBehind")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlyChangeOwnedStatusEffects")
                        .HasColumnType("bit");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PerStatusEffectOnTarget")
                        .HasColumnType("bit");

                    b.Property<int?>("PerStatusEffectOnTargetMax")
                        .HasColumnType("int");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredEquippedAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ResetConsecutiveOnSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SetHealthOnFatalDamageTaken")
                        .HasColumnType("int");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaminaCostFlatMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaminaCostList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetStatusEffectDurationMod")
                        .HasColumnType("int");

                    b.Property<double?>("TargetStatusEffectDurationMult")
                        .HasColumnType("float");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HatchetAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.IceMagicAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<string>("BaseDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CritChance")
                        .HasColumnType("float");

                    b.Property<double?>("CritDamage")
                        .HasColumnType("float");

                    b.Property<bool?>("DamageIsMelee")
                        .HasColumnType("bit");

                    b.Property<string>("DamageIsRanged")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistFromDefender")
                        .HasColumnType("int");

                    b.Property<string>("DmgPctToHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EquipWhenUnsheathed")
                        .HasColumnType("bit");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InActionTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Mana")
                        .HasColumnType("float");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxNumAroundMe")
                        .HasColumnType("int");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("MyManaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyManaPercent")
                        .HasColumnType("int");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyStaminaPercent")
                        .HasColumnType("int");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumAroundMe")
                        .HasColumnType("int");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequireReaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ResetConsecutiveOnSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectPotencyComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UISpellForManaCheck")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IceMagicAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.LifeMagicAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ActivationCooldown")
                        .HasColumnType("int");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CritChance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CritDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsMelee")
                        .HasColumnType("bit");

                    b.Property<bool?>("DamageIsRanged")
                        .HasColumnType("bit");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DisableCastSpellDurability")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistFromDefender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DmgPctToHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DoNotUnequipSelfAppliedSE")
                        .HasColumnType("bit");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HealScalingValueMultiplier")
                        .HasColumnType("float");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InActionTime")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Mana")
                        .HasColumnType("float");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<int?>("ModifySelfApplyStatusEffectDuration")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyHealthPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<int?>("NumTargetStatusEffectsToRemove")
                        .HasColumnType("int");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHealed")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnProjPassedThrough")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PerStatusEffectOnTarget")
                        .HasColumnType("bit");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetConsecutiveOnSuccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetStatusEffectDurationMod")
                        .HasColumnType("int");

                    b.Property<double?>("TargetStatusEffectDurationMult")
                        .HasColumnType("float");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UISpellForManaCheck")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LifeMagicAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.MusketAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ArmorPenetration")
                        .HasColumnType("float");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<string>("BaseDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BlockDamage")
                        .HasColumnType("float");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CheckStatusEffectsOnTargetOwned")
                        .HasColumnType("bit");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CritChance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CritDamage")
                        .HasColumnType("float");

                    b.Property<string>("DamageIsMelee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsRanged")
                        .HasColumnType("bit");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistFromDefender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DmgPctToHealth")
                        .HasColumnType("int");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceStatusEffectDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HeadshotDamage")
                        .HasColumnType("float");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InActionTime")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LinearlyScaleToDistance")
                        .HasColumnType("int");

                    b.Property<string>("Mana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<int?>("ModifySelfApplyStatusEffectDuration")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyHealthPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumAroundMe")
                        .HasColumnType("int");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<int?>("NumFreeCooldownsPerUse")
                        .HasColumnType("int");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ResetConsecutiveOnSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetStatusEffectDurationMod")
                        .HasColumnType("int");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeaponAccuracy")
                        .HasColumnType("int");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MusketAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.RapierAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivationCooldown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<string>("BaseDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BlockDamage")
                        .HasColumnType("float");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("float");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CritChance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CritDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsMelee")
                        .HasColumnType("bit");

                    b.Property<string>("DamageIsRanged")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableStatusEffectOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisableScalePerTargetSEStack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistFromDefender")
                        .HasColumnType("int");

                    b.Property<string>("DmgPctToHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InActionTime")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinearlyScaleToDistance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxHitCountMultiplier")
                        .HasColumnType("int");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyStaminaPercent")
                        .HasColumnType("int");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfHitsComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfTrackedHits")
                        .HasColumnType("int");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTakenWhileInvulnerable")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ResetConsecutiveOnSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetStatusEffectDurationMod")
                        .HasColumnType("int");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RapierAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.RuneAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilitiesOnCooldown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityCooldownComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityIdToCheckForTrackedHits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityOnCooldownOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivationCooldown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllowSelfDamageForHitEvents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachedTargetSpellIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackerVitalsCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Azoth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CanBeUnapplied")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CanBlockRangedOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOwnedStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckStatusEffectsOnTargetOwned")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumableCooldownForReset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownTimer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CritArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CritChance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CritDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CritDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageIsMelee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageIsRanged")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableStatusEffectOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisableApplyPerStatusEffectStack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisableCastSpellDurability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisableConsecutivePotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisableScalePerTargetSEStack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistFromDefender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DmgPctToHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoNotUnequipSelfAppliedSE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableTaunt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipLoadCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipWhenUnsheathed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExcludeFromGameModes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FastTravelAzothCostMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FastTravelInnCooldownMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceStatusEffectDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GatheringTradeskill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiveAzothPercentChance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealScalingValueMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthPenaltyPerStackRemoved")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitFromBehindArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitFromBehindDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IgnoreDisabledAttackTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IgnoreResetConsecutiveOnDeath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InActionTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<string>("IsConsumableIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("IsInCombatState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsNotConsumableIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsNotInCombatState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsStackableAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinearlyScaleToDistance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoadedAmmoCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoadedAmmoCountComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManaCostList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManaCostMult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManaRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<string>("ModifySelfApplyStatusEffectDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyHealthPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyManaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyManaPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumStatusEffectStacksToRemove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumStatusEffectsToRemove")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumStatusEffectsToTransfer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<string>("NumTargetStatusEffectsToRemove")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfHitsComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfTrackedHits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnAttachedSpellTargetDied")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnContributedKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCritTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnEventConditionalActivationChance")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnEventPassiveConditionsPass")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnGatheringComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHasDied")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHealed")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHealthChanged")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitBehind")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTakenWhileInvulnerable")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnInActionLongEnough")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnProjPassedThrough")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnSelfDamage")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnStatusEffectApplied")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetStatusEffectRemoved")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnUsedConsumable")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnWeaponSwap")
                        .HasColumnType("bit");

                    b.Property<string>("OnlyChangeOwnedStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherApplyStatusEffectDurations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnSelf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnSelfMax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTargetMax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmorMaxHealthMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefundAmmoPercentChance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefundConsumablePercentChance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepairDustYieldMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequireReaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredEquippedAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetConsecutiveOnSuccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetConsumableCooldowns")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetTrackedOnSuccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffectDurations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetHealthOnFatalDamageTaken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stamina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaminaCostFlatMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaminaCostList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectBeingApplied")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoryToTransfer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationMult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectStackSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHealthPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetVitalsCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToolDurabilityLossMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<string>("TreeColumnPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreeRowPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseMinAttackInfoForSelfAppliedSE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RuneAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.SpearAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ActivationCooldown")
                        .HasColumnType("float");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<string>("BaseDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CritChance")
                        .HasColumnType("float");

                    b.Property<string>("CritDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageIsMelee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsRanged")
                        .HasColumnType("bit");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableStatusEffectOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistFromDefender")
                        .HasColumnType("int");

                    b.Property<string>("DmgPctToHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InActionTime")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyHealthPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyStaminaPercent")
                        .HasColumnType("int");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfHitsComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfTrackedHits")
                        .HasColumnType("int");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlyChangeOwnedStatusEffects")
                        .HasColumnType("bit");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PerStatusEffectOnTarget")
                        .HasColumnType("bit");

                    b.Property<int?>("PerStatusEffectOnTargetMax")
                        .HasColumnType("int");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PowerLevelOverride")
                        .HasColumnType("int");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ResetConsecutiveOnSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Stamina")
                        .HasColumnType("int");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("StatusEffectDurationReduction")
                        .HasColumnType("float");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TargetHasGritActive")
                        .HasColumnType("bit");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TargetStatusEffectDurationMult")
                        .HasColumnType("float");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpearAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.SwordAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ActivationCooldown")
                        .HasColumnType("float");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<double?>("BaseDamageReduction")
                        .HasColumnType("float");

                    b.Property<string>("BlockDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BlockDamageReduction")
                        .HasColumnType("float");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CritChance")
                        .HasColumnType("float");

                    b.Property<string>("CritDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsMelee")
                        .HasColumnType("bit");

                    b.Property<bool?>("DamageIsRanged")
                        .HasColumnType("bit");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DisableCastSpellDurability")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistFromDefender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DmgPctToHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipWhenUnsheathed")
                        .HasColumnType("int");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InActionTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumStatusEffectsToRemove")
                        .HasColumnType("int");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfHitsComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfTrackedHits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitBehind")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PhysicalArmor")
                        .HasColumnType("float");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredEquippedAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetConsecutiveOnSuccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetStatusEffectDurationMod")
                        .HasColumnType("int");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SwordAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.VoidGauntletAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilitiesOnCooldown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityCooldownComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityOnCooldownOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ActivationCooldown")
                        .HasColumnType("float");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmorPenetration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachedTargetSpellIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<string>("BaseDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CheckStatusEffectsOnTargetOwned")
                        .HasColumnType("bit");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CritChance")
                        .HasColumnType("float");

                    b.Property<double?>("CritDamage")
                        .HasColumnType("float");

                    b.Property<string>("DamageIsMelee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageIsRanged")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableStatusEffectOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DisableApplyPerStatusEffectStack")
                        .HasColumnType("bit");

                    b.Property<bool?>("DisableCastSpellDurability")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistFromDefender")
                        .HasColumnType("int");

                    b.Property<double?>("DmgPctToHealth")
                        .HasColumnType("float");

                    b.Property<bool?>("DoNotUnequipSelfAppliedSE")
                        .HasColumnType("bit");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EquipWhenUnsheathed")
                        .HasColumnType("bit");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ForceStatusEffectDamageTableRow")
                        .HasColumnType("bit");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InActionTime")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Mana")
                        .HasColumnType("float");

                    b.Property<string>("ManaCostList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ManaCostMult")
                        .HasColumnType("float");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<string>("ModifySelfApplyStatusEffectDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("MyManaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyManaPercent")
                        .HasColumnType("int");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumAroundMe")
                        .HasColumnType("int");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfHitsComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfTrackedHits")
                        .HasColumnType("int");

                    b.Property<bool?>("OnAttachedSpellTargetDied")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnSelfDamage")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnStatusEffectApplied")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlyChangeOwnedStatusEffects")
                        .HasColumnType("bit");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTargetMax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerLevelOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetConsecutiveOnSuccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectBeingApplied")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusEffectStackSize")
                        .HasColumnType("int");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationCats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetStatusEffectDurationMod")
                        .HasColumnType("int");

                    b.Property<double?>("TargetStatusEffectDurationMult")
                        .HasColumnType("float");

                    b.Property<int?>("TargetStatusEffectStackSize")
                        .HasColumnType("int");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UISpellForManaCheck")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VoidGauntletAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AbilityData.WarHammerAbilityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityTrigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivationCooldown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfterAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ArmorPenetration")
                        .HasColumnType("float");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BaseDamage")
                        .HasColumnType("float");

                    b.Property<double?>("BaseDamageReduction")
                        .HasColumnType("float");

                    b.Property<double?>("BlockDamage")
                        .HasColumnType("float");

                    b.Property<double?>("BlockDamageReduction")
                        .HasColumnType("float");

                    b.Property<string>("CDRImmediatelyOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumeTargetStatusEffectMult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CooldownTimer")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CritChance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CritDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DamageIsMelee")
                        .HasColumnType("bit");

                    b.Property<bool?>("DamageIsRanged")
                        .HasColumnType("bit");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRowOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DisableCastSpellDurability")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistFromDefender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DmgPctToHealth")
                        .HasColumnType("float");

                    b.Property<string>("DontHaveStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableCrit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceShowNameTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForceTakeStaminaDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasGritActive")
                        .HasColumnType("bit");

                    b.Property<string>("HeadshotDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDamageMitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitRateDmgReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InActionTime")
                        .HasColumnType("float");

                    b.Property<bool?>("IsActiveAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGlobalAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Knockback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("MaxHealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxHitCountMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxMana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxTrackedHitCounts")
                        .HasColumnType("int");

                    b.Property<string>("MultiplyRemovedByPotency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyHealthPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyStaminaPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAroundComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumAroundMe")
                        .HasColumnType("int");

                    b.Property<int?>("NumConsecutiveHits")
                        .HasColumnType("int");

                    b.Property<string>("NumFreeCooldownsPerUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumSuccessfulHits")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfHitsComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfTrackedHits")
                        .HasColumnType("int");

                    b.Property<bool?>("OnBlockBreak")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnBlockedHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeath")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnDeathsDoor")
                        .HasColumnType("bit");

                    b.Property<string>("OnEquipStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnExecuted")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHeadShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnHitTaken")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnKill")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnLegShot")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnTargetBlockBreak")
                        .HasColumnType("bit");

                    b.Property<string>("OtherApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerStatusEffectOnTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalArmor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackNameOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveTargetStatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireReaction")
                        .HasColumnType("bit");

                    b.Property<string>("RequiredAbilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ResetConsecutiveOnSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("ResetCooldownTimers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingConstitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingDexterity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingIntelligence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingSpirit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScalingStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfApplyStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetMannequinTagStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetPotencyAsCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaggerDamageReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectCategoriesList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurationReduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCollisionFilters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetComparisonType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHasGritActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetHealthPercent")
                        .HasColumnType("int");

                    b.Property<string>("TargetMarker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectComparison")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectDurationMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatusEffectStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphCountOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegraphStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreatDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TrackHitCount")
                        .HasColumnType("bit");

                    b.Property<int?>("TreeColumnPosition")
                        .HasColumnType("int");

                    b.Property<int?>("TreeId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeRowPosition")
                        .HasColumnType("int");

                    b.Property<string>("UICategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponAccuracy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staggerdamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WarHammerAbilityTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.AffixStatData.AffixStatDataTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ABABleed")
                        .HasColumnType("float");

                    b.Property<double?>("ABACurse")
                        .HasColumnType("float");

                    b.Property<double?>("ABADisease")
                        .HasColumnType("float");

                    b.Property<double?>("ABAFrostbite")
                        .HasColumnType("float");

                    b.Property<double?>("ABAPoison")
                        .HasColumnType("float");

                    b.Property<double?>("ABSArcane")
                        .HasColumnType("float");

                    b.Property<double?>("ABSCorruption")
                        .HasColumnType("float");

                    b.Property<double?>("ABSFire")
                        .HasColumnType("float");

                    b.Property<double?>("ABSIce")
                        .HasColumnType("float");

                    b.Property<double?>("ABSLightning")
                        .HasColumnType("float");

                    b.Property<double?>("ABSNature")
                        .HasColumnType("float");

                    b.Property<double?>("ABSSiege")
                        .HasColumnType("float");

                    b.Property<double?>("ABSSlash")
                        .HasColumnType("float");

                    b.Property<double?>("ABSStandard")
                        .HasColumnType("float");

                    b.Property<double?>("ABSStrike")
                        .HasColumnType("float");

                    b.Property<double?>("ABSThrust")
                        .HasColumnType("float");

                    b.Property<string>("ABSVitalsCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AFABleed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AFABlight")
                        .HasColumnType("float");

                    b.Property<double?>("AFACurse")
                        .HasColumnType("float");

                    b.Property<string>("AFADisease")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AFAFrostbite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AFAPoison")
                        .HasColumnType("float");

                    b.Property<string>("AdditionalDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfflictionDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfflictionMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppendToTooltip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeModifiers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BLAArcane")
                        .HasColumnType("float");

                    b.Property<double?>("BLACorruption")
                        .HasColumnType("float");

                    b.Property<double?>("BLAFire")
                        .HasColumnType("float");

                    b.Property<string>("BLAIce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BLALightning")
                        .HasColumnType("float");

                    b.Property<string>("BLANature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BLASiege")
                        .HasColumnType("float");

                    b.Property<double?>("BLASlash")
                        .HasColumnType("float");

                    b.Property<double?>("BLAStandard")
                        .HasColumnType("float");

                    b.Property<double?>("BLAStrike")
                        .HasColumnType("float");

                    b.Property<double?>("BLAThrust")
                        .HasColumnType("float");

                    b.Property<double?>("BaseDamageModifier")
                        .HasColumnType("float");

                    b.Property<string>("BaseDamageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DMGArcane")
                        .HasColumnType("float");

                    b.Property<double?>("DMGCorruption")
                        .HasColumnType("float");

                    b.Property<double?>("DMGFire")
                        .HasColumnType("float");

                    b.Property<double?>("DMGIce")
                        .HasColumnType("float");

                    b.Property<double?>("DMGLightning")
                        .HasColumnType("float");

                    b.Property<double?>("DMGNature")
                        .HasColumnType("float");

                    b.Property<string>("DMGSiege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DMGSlash")
                        .HasColumnType("float");

                    b.Property<string>("DMGStandard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DMGStrike")
                        .HasColumnType("float");

                    b.Property<double?>("DMGThrust")
                        .HasColumnType("float");

                    b.Property<string>("DMGVitalsCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DamagePercentage")
                        .HasColumnType("float");

                    b.Property<string>("DamageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DisableDurabilityLoss")
                        .HasColumnType("bit");

                    b.Property<double?>("DurabilityMod")
                        .HasColumnType("float");

                    b.Property<string>("EffectDurationMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EffectModMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Encumbrance")
                        .HasColumnType("float");

                    b.Property<double?>("FastTravelEncumbranceMod")
                        .HasColumnType("float");

                    b.Property<double?>("FishRarityRollModifier")
                        .HasColumnType("float");

                    b.Property<double?>("FishSizeRollModifier")
                        .HasColumnType("float");

                    b.Property<double?>("FishingLineStrength")
                        .HasColumnType("float");

                    b.Property<double?>("GatheringEfficiency")
                        .HasColumnType("float");

                    b.Property<string>("HealMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAdditiveDamage")
                        .HasColumnType("bit");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("MODConstitution")
                        .HasColumnType("float");

                    b.Property<double?>("MODDexterity")
                        .HasColumnType("float");

                    b.Property<double?>("MODFocus")
                        .HasColumnType("float");

                    b.Property<double?>("MODIntelligence")
                        .HasColumnType("float");

                    b.Property<double?>("MODStrength")
                        .HasColumnType("float");

                    b.Property<double?>("MP_FinalNotePerfectXPBonus")
                        .HasColumnType("float");

                    b.Property<double?>("MP_GroupXPBonus")
                        .HasColumnType("float");

                    b.Property<int?>("MP_IgnoreMissedNotes")
                        .HasColumnType("int");

                    b.Property<int?>("MP_OpeningNotesPerfect")
                        .HasColumnType("int");

                    b.Property<int?>("MP_RakeReduction")
                        .HasColumnType("int");

                    b.Property<double?>("MP_SoloXPBonus")
                        .HasColumnType("float");

                    b.Property<double?>("ManaRate")
                        .HasColumnType("float");

                    b.Property<double?>("MaxCastDistance")
                        .HasColumnType("float");

                    b.Property<double?>("MaxHealthMod")
                        .HasColumnType("float");

                    b.Property<double?>("MaxManaMod")
                        .HasColumnType("float");

                    b.Property<double?>("MaxStaminaMod")
                        .HasColumnType("float");

                    b.Property<string>("MoveSpeedMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PreferHigherScaling")
                        .HasColumnType("bit");

                    b.Property<double?>("RESBlight")
                        .HasColumnType("float");

                    b.Property<double?>("RESCurse")
                        .HasColumnType("float");

                    b.Property<double?>("RESPoison")
                        .HasColumnType("float");

                    b.Property<int?>("ScalingDexterity")
                        .HasColumnType("int");

                    b.Property<double?>("ScalingFocus")
                        .HasColumnType("float");

                    b.Property<double?>("ScalingIntelligence")
                        .HasColumnType("float");

                    b.Property<int?>("ScalingStrength")
                        .HasColumnType("int");

                    b.Property<string>("StaminaCostID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaminaCostMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("StaminaDamageModifier")
                        .HasColumnType("float");

                    b.Property<double?>("StaminaRate")
                        .HasColumnType("float");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummerFishRarityRollModifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("UseCountMultiplier")
                        .HasColumnType("float");

                    b.Property<string>("UseWeaponAttributeScaling")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WKNArcane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WKNCorruption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WKNFire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WKNIce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WKNLightning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WKNNature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WKNSiege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WKNSlash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WKNStandard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WKNStrike")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WKNThrust")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponEffectType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("WeightMultiplier")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("AffixStatDataTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.ConsumableItemDefinitions.ConsumableItemDefinitions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfflictionDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseDamageModifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseDamageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumableID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CooldownDuration")
                        .HasColumnType("int");

                    b.Property<string>("CooldownId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DMGVitalsCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Damage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DisableUseInCombat")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayStatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DurationOverrides")
                        .HasColumnType("int");

                    b.Property<int?>("DurationScaleFactor")
                        .HasColumnType("int");

                    b.Property<string>("EquipAbility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxDurationModifier")
                        .HasColumnType("int");

                    b.Property<double?>("MaxPotencyModifier")
                        .HasColumnType("float");

                    b.Property<int?>("MinDurationModifier")
                        .HasColumnType("int");

                    b.Property<int?>("MinPotencyModifier")
                        .HasColumnType("int");

                    b.Property<string>("OnUseAffliction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PotencyScaleFactor")
                        .HasColumnType("int");

                    b.Property<string>("RemoveStatusEffectCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredItemClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatMultipliers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusEffectMod")
                        .HasColumnType("int");

                    b.Property<int?>("UseCount")
                        .HasColumnType("int");

                    b.Property<string>("WeaponUseCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConsumableItemDefinitions", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.DamageData.DamageTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AddAffliction")
                        .HasColumnType("int");

                    b.Property<double?>("AddDmg")
                        .HasColumnType("float");

                    b.Property<int?>("AddThreat")
                        .HasColumnType("int");

                    b.Property<string>("Affliction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfflictionPercent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AttackBlockedRuneCharge")
                        .HasColumnType("float");

                    b.Property<bool?>("AttackDealsNoDurability")
                        .HasColumnType("bit");

                    b.Property<double?>("AttackRuneCharge")
                        .HasColumnType("float");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BlockAbsorptionModifier")
                        .HasColumnType("float");

                    b.Property<string>("BlockCameraShakeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BlockHitStun")
                        .HasColumnType("int");

                    b.Property<double?>("BlockImpactDecayRate")
                        .HasColumnType("float");

                    b.Property<int?>("BlockImpactDistanceX")
                        .HasColumnType("int");

                    b.Property<double?>("BlockImpactDistanceY")
                        .HasColumnType("float");

                    b.Property<int?>("BlockImpactDistanceZ")
                        .HasColumnType("int");

                    b.Property<int?>("BlockPowerLevel")
                        .HasColumnType("int");

                    b.Property<double?>("BlockStaminaDmgMod")
                        .HasColumnType("float");

                    b.Property<string>("BlockTargetCameraShakeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CameraShakeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CanCrit")
                        .HasColumnType("bit");

                    b.Property<bool?>("CancelTargetHoming")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CritCameraShakeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CritHitStun")
                        .HasColumnType("int");

                    b.Property<double?>("CritImpactDecayRate")
                        .HasColumnType("float");

                    b.Property<int?>("CritImpactDistanceX")
                        .HasColumnType("int");

                    b.Property<double?>("CritImpactDistanceY")
                        .HasColumnType("float");

                    b.Property<int?>("CritImpactDistanceZ")
                        .HasColumnType("int");

                    b.Property<int?>("CritPowerLevel")
                        .HasColumnType("int");

                    b.Property<int?>("CritStaggerDmgModifier")
                        .HasColumnType("int");

                    b.Property<string>("CritTargetCameraShakeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeflectDamageID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DmgCoef")
                        .HasColumnType("float");

                    b.Property<double?>("DmgCoefCrit")
                        .HasColumnType("float");

                    b.Property<double?>("DmgCoefHead")
                        .HasColumnType("float");

                    b.Property<int?>("DurabilityCostOverride")
                        .HasColumnType("int");

                    b.Property<string>("EffectOnlyOnDamage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HitBlockedRuneCharge")
                        .HasColumnType("float");

                    b.Property<double?>("HitRateDmgModifier")
                        .HasColumnType("float");

                    b.Property<double?>("HitRuneCharge")
                        .HasColumnType("float");

                    b.Property<int?>("HitStun")
                        .HasColumnType("int");

                    b.Property<int?>("IgnoreInvulnerable")
                        .HasColumnType("int");

                    b.Property<double?>("ImpactDecayRate")
                        .HasColumnType("float");

                    b.Property<int?>("ImpactDistanceX")
                        .HasColumnType("int");

                    b.Property<double?>("ImpactDistanceY")
                        .HasColumnType("float");

                    b.Property<int?>("ImpactDistanceZ")
                        .HasColumnType("int");

                    b.Property<int?>("ImpactRating")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAbility")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRanged")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaunt")
                        .HasColumnType("bit");

                    b.Property<int?>("LOSCheckVerticalAngleOffset")
                        .HasColumnType("int");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("MaxHitRateDmgMod")
                        .HasColumnType("float");

                    b.Property<bool?>("NoBackstab")
                        .HasColumnType("bit");

                    b.Property<bool?>("NoHeadshot")
                        .HasColumnType("bit");

                    b.Property<bool?>("NoLegShots")
                        .HasColumnType("bit");

                    b.Property<int?>("NoReaction")
                        .HasColumnType("int");

                    b.Property<int?>("PowerLevel")
                        .HasColumnType("int");

                    b.Property<double?>("StaggerDmgModifier")
                        .HasColumnType("float");

                    b.Property<double?>("StaggerResistModifier")
                        .HasColumnType("float");

                    b.Property<string>("StatusEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StunBreakoutIncrement")
                        .HasColumnType("int");

                    b.Property<string>("SurfaceImpactEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCameraShakeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TauntDuration")
                        .HasColumnType("int");

                    b.Property<int?>("TauntMinimumThreatValue")
                        .HasColumnType("int");

                    b.Property<double?>("TauntThreatBoostPercentage")
                        .HasColumnType("float");

                    b.Property<double?>("ThreatMultiplier")
                        .HasColumnType("float");

                    b.Property<bool?>("Unblockable")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseAttackerPosForReaction")
                        .HasColumnType("bit");

                    b.Property<string>("WeaponCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DamageTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.Locales", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locales", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.MasterItemDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcquisitionNotificationId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArmorAppearanceF")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArmorAppearanceM")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AttributionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AudioCreated")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("AudioDestroyed")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("AudioPickup")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("AudioPlace")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("AudioUse")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("BindOnEquip")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("BindOnPickup")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int?>("CanHavePerks")
                        .HasColumnType("int");

                    b.Property<int?>("CanReplaceGem")
                        .HasColumnType("int");

                    b.Property<int?>("ConfirmBeforeUse")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmDestroy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ConsumeOnUse")
                        .HasColumnType("int");

                    b.Property<string>("ContainerGS")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContainerLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CraftingRecipe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeathDropPercentage")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int?>("DestroyOnBreak")
                        .HasColumnType("int");

                    b.Property<int?>("Durability")
                        .HasColumnType("int");

                    b.Property<double?>("DurabilityDmgOnDeath")
                        .HasColumnType("float");

                    b.Property<string>("EventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExceedMaxIndex")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExceedMinIndex")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExtraBonusItemChance")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ForceRarity")
                        .HasColumnType("int");

                    b.Property<int?>("GearScoreOverride")
                        .HasColumnType("int");

                    b.Property<string>("GrantsHWMBump")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HeartgemRuneTooltipTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HeartgemTooltipBackgroundImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HiResIconPath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("HideFromRewardOpenPopup")
                        .HasColumnType("int");

                    b.Property<string>("HideInLootTicker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HousingTags")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("IconCaptureGroup")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("IconPath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("IgnoreHWMScaling")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IgnoreNameChanges")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IgnoreParentColumns_DVT")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IngredientBonusPrimary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IngredientBonusSecondary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IngredientCategories")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("IngredientGearScoreBaseBonus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IngredientGearScoreMaxBonus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDepricated")
                        .HasColumnType("bit");

                    b.Property<string>("IsMissionItem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IsRepairable")
                        .HasColumnType("int");

                    b.Property<int?>("IsRequiredItem")
                        .HasColumnType("int");

                    b.Property<int?>("IsSalvageable")
                        .HasColumnType("int");

                    b.Property<int?>("IsUniqueItem")
                        .HasColumnType("int");

                    b.Property<string>("ItemClass")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ItemFileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ItemStatsRef")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ItemType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemTypeDisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MannequinTag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MasterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxGearScore")
                        .HasColumnType("int");

                    b.Property<int?>("MaxStackSize")
                        .HasColumnType("int");

                    b.Property<int?>("MinGearScore")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("Nonremovable")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentItemId_DVT")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Perk1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Perk2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Perk3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Perk4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Perk5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PerkBucket1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PerkBucket2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PerkBucket3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PerkBucket4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PerkBucket5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrefabPath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double?>("RepairDustModifier")
                        .HasColumnType("float");

                    b.Property<string>("RepairGameEventID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RepairRecipe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RepairTypes")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequiredLevel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SalvageAchievement")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SalvageEntitlementId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalvageGameEventID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalvageLootTags")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("SalvageResources")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoundTableID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Tier")
                        .HasColumnType("int");

                    b.Property<string>("TradingCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TradingFamily")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TradingGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UiItemClass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UseMagicAffix")
                        .HasColumnType("int");

                    b.Property<int?>("UseMaterialAffix")
                        .HasColumnType("int");

                    b.Property<int?>("UseTypeAffix")
                        .HasColumnType("int");

                    b.Property<string>("WarboardDepositStat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WarboardGatherStat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WeaponAppearanceOverride")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MasterItemDefinitions", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.PerkBucketData.PerkBucketPerk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PerkBucketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PerkBucketsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PerkId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerkNumber")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PerkBucketsId");

                    b.ToTable("PerkBucketPerks", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.PerkBucketData.PerkBuckets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CURRENTLIMIT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("IgnoreExclusiveLabelWeights")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PerkBucketID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PerkChance")
                        .HasColumnType("float");

                    b.Property<string>("PerkType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PerkBuckets", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.PerkData.ItemPerk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Affix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AppliedPrefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AppliedSuffix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Channel")
                        .HasColumnType("int");

                    b.Property<string>("CombatStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConditionEvent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayPhases")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeprecatedPerkId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EquipAbility")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExcludeFromTradingPost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExcludeItemClass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExclusiveLabels")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FishingWaterType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IconPath")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeprecated")
                        .HasColumnType("bit");

                    b.Property<string>("ItemClass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemClassGSBonus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MasterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamePriority")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PerkID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PerkType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("ScalingPerGearScore")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<string>("TerritoryId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WeaponTag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ItemPerks", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.SpellData.SpellDataTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbilityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmmoSlot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachToOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseDamage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeamEffect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CastDistance")
                        .HasColumnType("float");

                    b.Property<string>("CastHeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastRadius")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastingTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChainDelayDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ChannelTime")
                        .HasColumnType("float");

                    b.Property<string>("CharRelPosOffsetX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharRelPosOffsetY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharRelPosOffsetZ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharRelRotOffsetX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharRelRotOffsetY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharRelRotOffsetZ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckObstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClearOnEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClearOnExit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConeAngle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConeWidth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DamageTable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("DurationScaling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndOnCasterDeath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FireJointName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitAiTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IgnoreOverheadCollision")
                        .HasColumnType("bit");

                    b.Property<bool?>("IgnoreRotationForSecondaryProjectileLaunchZSpd")
                        .HasColumnType("bit");

                    b.Property<string>("IgnoreSelf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IgnoreStructures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IgnoreTargetIfAtDeathsDoor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IgnoreTargetIfDead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndicatorVFX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InnerRadius")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsUnaffiliated")
                        .HasColumnType("bit");

                    b.Property<string>("ItemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Length")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManaCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxChainNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxRadiusScaling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumToSpawn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumToSpawnBeforeFail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OverrideTargetForAiThreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjPosOffsetX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjPosOffsetY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjPosOffsetZ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjRaycastOrientation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjRotOffsetX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjRotOffsetY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjRotOffsetZ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Radius")
                        .HasColumnType("float");

                    b.Property<string>("RadiusScaling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Revive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScaleWithCharacterBoundingBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScaleWithDynamicScale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryPrefabPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryProjectileLaunchMaxZSpeeds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryProjectileLaunchMinZSpeeds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SecondaryProjectileLaunchZOffset")
                        .HasColumnType("float");

                    b.Property<string>("SecondarySpellID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondarySpellProjectileLaunchAngles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShapeTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siphon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpawnAngle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpawnBeamCasterJoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpawnRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpawnSecondaryOnCollision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpawnSecondaryOnElapsed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpawnSecondaryOnPassthrough")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpellID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpellPrefabPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpellTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffectDurations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEffects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StickWhenAttached")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreOffsetWhenStuckToGDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetAbilityCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TertiaryPrefabPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TertiarySpellID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackNumInVolume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseCameraTargetLock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseChainCasterPaperdoll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseDirectTargetAsAttachOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("UseStatusEffectDuration")
                        .HasColumnType("bit");

                    b.Property<string>("WeaponSlotOverride")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpellDataTable", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.StatusEffectData.StatusEffects", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ABABleed")
                        .HasColumnType("float");

                    b.Property<double?>("ABABlight")
                        .HasColumnType("float");

                    b.Property<double?>("ABACurse")
                        .HasColumnType("float");

                    b.Property<double?>("ABADisease")
                        .HasColumnType("float");

                    b.Property<double?>("ABAFrostbite")
                        .HasColumnType("float");

                    b.Property<double?>("ABAPoison")
                        .HasColumnType("float");

                    b.Property<int?>("ABSAcid")
                        .HasColumnType("int");

                    b.Property<double?>("ABSArcane")
                        .HasColumnType("float");

                    b.Property<double?>("ABSCorruption")
                        .HasColumnType("float");

                    b.Property<double?>("ABSFire")
                        .HasColumnType("float");

                    b.Property<double?>("ABSIce")
                        .HasColumnType("float");

                    b.Property<double?>("ABSLightning")
                        .HasColumnType("float");

                    b.Property<double?>("ABSNature")
                        .HasColumnType("float");

                    b.Property<double?>("ABSSiege")
                        .HasColumnType("float");

                    b.Property<double?>("ABSSlash")
                        .HasColumnType("float");

                    b.Property<double?>("ABSStandard")
                        .HasColumnType("float");

                    b.Property<double?>("ABSStrike")
                        .HasColumnType("float");

                    b.Property<double?>("ABSThrust")
                        .HasColumnType("float");

                    b.Property<string>("ABSVitalsCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AFABleed")
                        .HasColumnType("float");

                    b.Property<double?>("AFABlight")
                        .HasColumnType("float");

                    b.Property<double?>("AFACurse")
                        .HasColumnType("float");

                    b.Property<double?>("AFADisease")
                        .HasColumnType("float");

                    b.Property<double?>("AFAFrostbite")
                        .HasColumnType("float");

                    b.Property<double?>("AFAPoison")
                        .HasColumnType("float");

                    b.Property<string>("AddOnStackSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddOnStackSizeComparison")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Afflictions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllowSelfOnlyAsSourceForAbilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ApplicationCooldown")
                        .HasColumnType("float");

                    b.Property<double?>("AzothMod")
                        .HasColumnType("float");

                    b.Property<double?>("BLAArcane")
                        .HasColumnType("float");

                    b.Property<double?>("BLACorruption")
                        .HasColumnType("float");

                    b.Property<double?>("BLAFire")
                        .HasColumnType("float");

                    b.Property<double?>("BLAIce")
                        .HasColumnType("float");

                    b.Property<double?>("BLALightning")
                        .HasColumnType("float");

                    b.Property<double?>("BLASiege")
                        .HasColumnType("float");

                    b.Property<double?>("BLASlash")
                        .HasColumnType("float");

                    b.Property<double?>("BLAStandard")
                        .HasColumnType("float");

                    b.Property<double?>("BLAStrike")
                        .HasColumnType("float");

                    b.Property<double?>("BLAThrust")
                        .HasColumnType("float");

                    b.Property<double?>("BaseDuration")
                        .HasColumnType("float");

                    b.Property<string>("BlockMultipleEffectsFromSameSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CastSpell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CoreTempMod")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CritChanceModifier")
                        .HasColumnType("float");

                    b.Property<double?>("CritDamageModifier")
                        .HasColumnType("float");

                    b.Property<double?>("DMGArcane")
                        .HasColumnType("float");

                    b.Property<double?>("DMGCorruption")
                        .HasColumnType("float");

                    b.Property<double?>("DMGFire")
                        .HasColumnType("float");

                    b.Property<double?>("DMGIce")
                        .HasColumnType("float");

                    b.Property<double?>("DMGLightning")
                        .HasColumnType("float");

                    b.Property<double?>("DMGNature")
                        .HasColumnType("float");

                    b.Property<double?>("DMGSiege")
                        .HasColumnType("float");

                    b.Property<double?>("DMGSlash")
                        .HasColumnType("float");

                    b.Property<double?>("DMGStandard")
                        .HasColumnType("float");

                    b.Property<double?>("DMGStrike")
                        .HasColumnType("float");

                    b.Property<double?>("DMGThrust")
                        .HasColumnType("float");

                    b.Property<string>("DMGVitalsCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DMGVitalsCategory_Tooltip")
                        .HasColumnType("float");

                    b.Property<string>("DamageSkipsDeathsDoor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DelayInitialTick")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DisableAllPerks")
                        .HasColumnType("bit");

                    b.Property<string>("DisableAllPerksExceptionLabels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DisableCastSpellDurability")
                        .HasColumnType("bit");

                    b.Property<string>("DisableSupportContributionRewards")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisableTelemetry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DontApplyOnEndEffectOnRemove")
                        .HasColumnType("bit");

                    b.Property<bool?>("DontApplyOnEndEffectOnTimeOutDeath")
                        .HasColumnType("bit");

                    b.Property<string>("DontReplaceStack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Drink")
                        .HasColumnType("float");

                    b.Property<double?>("DrinkBurn")
                        .HasColumnType("float");

                    b.Property<double?>("DurationMax")
                        .HasColumnType("float");

                    b.Property<string>("DurationScalingPerGearScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DynamicModelScaleFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DynamicModelScaleRampTimeSecs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("EFFHarvesting")
                        .HasColumnType("float");

                    b.Property<double?>("EFFLogging")
                        .HasColumnType("float");

                    b.Property<double?>("EFFMining")
                        .HasColumnType("float");

                    b.Property<double?>("EFFSkinning")
                        .HasColumnType("float");

                    b.Property<double?>("EXPFishing")
                        .HasColumnType("float");

                    b.Property<double?>("EXPHarvesting")
                        .HasColumnType("float");

                    b.Property<double?>("EXPLeatherworking")
                        .HasColumnType("float");

                    b.Property<double?>("EXPLogging")
                        .HasColumnType("float");

                    b.Property<double?>("EXPMining")
                        .HasColumnType("float");

                    b.Property<double?>("EXPSkinning")
                        .HasColumnType("float");

                    b.Property<double?>("EXPSmelting")
                        .HasColumnType("float");

                    b.Property<double?>("EXPStonecutting")
                        .HasColumnType("float");

                    b.Property<double?>("EXPWeaving")
                        .HasColumnType("float");

                    b.Property<string>("EXPWoodworking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EffectCategories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EffectDurationMods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EffectPotencyMods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Encumbrance")
                        .HasColumnType("float");

                    b.Property<string>("EquipAbility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("FactionReputationMod")
                        .HasColumnType("float");

                    b.Property<double?>("FactionTokensMod")
                        .HasColumnType("float");

                    b.Property<string>("FastTravelEncumbranceMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FishSizeRollModifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FishingLineStrength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Food")
                        .HasColumnType("float");

                    b.Property<double?>("FoodBurn")
                        .HasColumnType("float");

                    b.Property<bool?>("ForceReplicateToRemotes")
                        .HasColumnType("bit");

                    b.Property<double?>("FromAlchemy")
                        .HasColumnType("float");

                    b.Property<double?>("FromSpell")
                        .HasColumnType("float");

                    b.Property<string>("FxScriptOff")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FxScriptOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameEventId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GlobalRollMod")
                        .HasColumnType("float");

                    b.Property<double?>("GrantSanctuary")
                        .HasColumnType("float");

                    b.Property<string>("GrantedSkinId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HealMod")
                        .HasColumnType("float");

                    b.Property<string>("HealRewardGameEventId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealRewardThreshold")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("HealScalingValueMultiplier")
                        .HasColumnType("float");

                    b.Property<string>("HealThreatMultiplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Health")
                        .HasColumnType("float");

                    b.Property<double?>("HealthMin")
                        .HasColumnType("float");

                    b.Property<double?>("HealthModifierBasePercent")
                        .HasColumnType("float");

                    b.Property<double?>("HealthModifierDamageBased")
                        .HasColumnType("float");

                    b.Property<double?>("HealthModifierPercent")
                        .HasColumnType("float");

                    b.Property<double?>("HealthRate")
                        .HasColumnType("float");

                    b.Property<bool?>("HideHudDurationNumbers")
                        .HasColumnType("bit");

                    b.Property<string>("HidesOtherStatusEffectIcons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HitCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("INSHarvesting")
                        .HasColumnType("float");

                    b.Property<double?>("INSLogging")
                        .HasColumnType("float");

                    b.Property<double?>("INSMining")
                        .HasColumnType("float");

                    b.Property<double?>("INSSkinning")
                        .HasColumnType("float");

                    b.Property<string>("IgnoreDiminishingReturns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IgnoreFxScriptWhenPotencyIsZero")
                        .HasColumnType("bit");

                    b.Property<string>("IgnoreInvulnerable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InheritDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InheritTotalDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InitialStackSize")
                        .HasColumnType("float");

                    b.Property<string>("IsClientPredicted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsNegative")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTrueDamage")
                        .HasColumnType("bit");

                    b.Property<string>("ItemClassWeightMods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemLootVolumeMods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeepOnTickEffectOnEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LootTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MGSArcana")
                        .HasColumnType("float");

                    b.Property<double?>("MGSArmoring")
                        .HasColumnType("float");

                    b.Property<double?>("MGSEngineering")
                        .HasColumnType("float");

                    b.Property<double?>("MGSJewelcrafting")
                        .HasColumnType("float");

                    b.Property<double?>("MGSWeaponsmithing")
                        .HasColumnType("float");

                    b.Property<double?>("MODConstitution")
                        .HasColumnType("float");

                    b.Property<double?>("MODDexterity")
                        .HasColumnType("float");

                    b.Property<double?>("MODFocus")
                        .HasColumnType("float");

                    b.Property<double?>("MODIntelligence")
                        .HasColumnType("float");

                    b.Property<double?>("MODStrength")
                        .HasColumnType("float");

                    b.Property<double?>("MULTFishing")
                        .HasColumnType("float");

                    b.Property<double?>("MULTHarvesting")
                        .HasColumnType("float");

                    b.Property<double?>("MULTLogging")
                        .HasColumnType("float");

                    b.Property<double?>("MULTMining")
                        .HasColumnType("float");

                    b.Property<double?>("MULTSkinning")
                        .HasColumnType("float");

                    b.Property<double?>("Mana")
                        .HasColumnType("float");

                    b.Property<double?>("ManaModifierDamageBased")
                        .HasColumnType("float");

                    b.Property<double?>("ManaRate")
                        .HasColumnType("float");

                    b.Property<double?>("MaxGSArcana")
                        .HasColumnType("float");

                    b.Property<double?>("MaxGSArmoring")
                        .HasColumnType("float");

                    b.Property<double?>("MaxGSEngineering")
                        .HasColumnType("float");

                    b.Property<double?>("MaxGSJewelcrafting")
                        .HasColumnType("float");

                    b.Property<double?>("MaxGSWeaponsmithing")
                        .HasColumnType("float");

                    b.Property<double?>("MaxHealthMod")
                        .HasColumnType("float");

                    b.Property<double?>("MoveSpeedMod")
                        .HasColumnType("float");

                    b.Property<int?>("NoDodge")
                        .HasColumnType("int");

                    b.Property<string>("NoHealthRegen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoNav")
                        .HasColumnType("int");

                    b.Property<int?>("NoRun")
                        .HasColumnType("int");

                    b.Property<int?>("NoSprint")
                        .HasColumnType("int");

                    b.Property<int?>("NonConsumableHealMod")
                        .HasColumnType("int");

                    b.Property<string>("NotCombatAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnDeathStatusEffect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnEndStatusEffect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnHitAffixes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnStackStatusEffect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnTickStatusEffect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnlyChangeOwnedStatusEffects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OverrideOtherNameplateText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceholderIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PotencyMax")
                        .HasColumnType("float");

                    b.Property<string>("PotencyPerGearScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PotencyPerLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PreventPassiveAbilitiesOnEquip")
                        .HasColumnType("bit");

                    b.Property<double?>("RESBleed")
                        .HasColumnType("float");

                    b.Property<double?>("RESBlight")
                        .HasColumnType("float");

                    b.Property<double?>("RESCurse")
                        .HasColumnType("float");

                    b.Property<double?>("RESDisease")
                        .HasColumnType("float");

                    b.Property<double?>("RESFrostbite")
                        .HasColumnType("float");

                    b.Property<double?>("RESPoison")
                        .HasColumnType("float");

                    b.Property<double?>("ROLCooking")
                        .HasColumnType("float");

                    b.Property<double?>("ROLFishing")
                        .HasColumnType("float");

                    b.Property<double?>("ROLHarvesting")
                        .HasColumnType("float");

                    b.Property<double?>("ROLLeatherworking")
                        .HasColumnType("float");

                    b.Property<double?>("ROLLogging")
                        .HasColumnType("float");

                    b.Property<double?>("ROLMining")
                        .HasColumnType("float");

                    b.Property<double?>("ROLSkinning")
                        .HasColumnType("float");

                    b.Property<double?>("ROLSmelting")
                        .HasColumnType("float");

                    b.Property<double?>("ROLStonecutting")
                        .HasColumnType("float");

                    b.Property<double?>("ROLWeaving")
                        .HasColumnType("float");

                    b.Property<double?>("ROLWoodworking")
                        .HasColumnType("float");

                    b.Property<int?>("RankSorting")
                        .HasColumnType("int");

                    b.Property<bool?>("ReapplyAfterPersistenceReload")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveOnDeath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveOnDeathsDoor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveOnGameModeExit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveOnRespawn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffectCategories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveStatusEffects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveUnappliedStacks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequireReaction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespecAttributes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespecTradeskills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScaleAmountOverTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScaleAmountOverTimeMax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScaleAmountOverTimeMin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShouldRefreshFxScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShowInNameplates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShowInUITray")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ShowTextInDamageNumbers")
                        .HasColumnType("bit");

                    b.Property<string>("ShowTextInNameplates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ShowUiDamageNumbersOnHeal")
                        .HasColumnType("bit");

                    b.Property<int?>("Silenced")
                        .HasColumnType("int");

                    b.Property<string>("SlotToFillWeaponDamageInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceRuneChargeOnApply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceRuneChargeOnHealthChangeOnly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceRuneChargeOnTick")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpawnSlice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SprintSpeedMod")
                        .HasColumnType("float");

                    b.Property<string>("StackDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StackMax")
                        .HasColumnType("int");

                    b.Property<double?>("Stamina")
                        .HasColumnType("float");

                    b.Property<double?>("StaminaDamageModifier")
                        .HasColumnType("float");

                    b.Property<double?>("StaminaRate")
                        .HasColumnType("float");

                    b.Property<string>("StatusID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopOnHitCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Stunned")
                        .HasColumnType("int");

                    b.Property<string>("TargetOwnsSpell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TempMod")
                        .HasColumnType("float");

                    b.Property<double?>("TerritoryStandingMod")
                        .HasColumnType("float");

                    b.Property<string>("TickCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TickRate")
                        .HasColumnType("float");

                    b.Property<int?>("UIPriority")
                        .HasColumnType("int");

                    b.Property<int?>("UiNameplatePriority")
                        .HasColumnType("int");

                    b.Property<string>("UseHealScalingValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseLightweightReplication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseSourceWeaponForAbilityEffect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseSourceWeaponForSpell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("WKNArcane")
                        .HasColumnType("float");

                    b.Property<double?>("WKNCorruption")
                        .HasColumnType("float");

                    b.Property<double?>("WKNFire")
                        .HasColumnType("float");

                    b.Property<double?>("WKNIce")
                        .HasColumnType("float");

                    b.Property<double?>("WKNLightning")
                        .HasColumnType("float");

                    b.Property<double?>("WKNNature")
                        .HasColumnType("float");

                    b.Property<double?>("WKNSiege")
                        .HasColumnType("float");

                    b.Property<double?>("WKNSlash")
                        .HasColumnType("float");

                    b.Property<double?>("WKNStandard")
                        .HasColumnType("float");

                    b.Property<double?>("WKNStrike")
                        .HasColumnType("float");

                    b.Property<double?>("WKNThrust")
                        .HasColumnType("float");

                    b.Property<string>("WeaponEffectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponMasteryCategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WindowHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XPIncreases")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("XPIncreasesTooltip")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("StatusEffects", "NewWorld");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.WeaponItemDefinitions.WeaponItemDefinitions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ABABleed")
                        .HasColumnType("float");

                    b.Property<double?>("ABACurse")
                        .HasColumnType("float");

                    b.Property<double?>("ABADisease")
                        .HasColumnType("float");

                    b.Property<double?>("ABAFrostbite")
                        .HasColumnType("float");

                    b.Property<double?>("ABAPoison")
                        .HasColumnType("float");

                    b.Property<string>("AmmoMesh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmmoType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnimDbPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Appearance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ArmorRatingScaleFactor")
                        .HasColumnType("float");

                    b.Property<string>("AttachedSpellData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttackGameEventID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AudioPickup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AudioPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AutoReloadAmmoSeconds")
                        .HasColumnType("float");

                    b.Property<double?>("BLAArcane")
                        .HasColumnType("float");

                    b.Property<double?>("BLACorruption")
                        .HasColumnType("float");

                    b.Property<double?>("BLAFire")
                        .HasColumnType("float");

                    b.Property<double?>("BLAIce")
                        .HasColumnType("float");

                    b.Property<double?>("BLALightning")
                        .HasColumnType("float");

                    b.Property<double?>("BLANature")
                        .HasColumnType("float");

                    b.Property<double?>("BLASiege")
                        .HasColumnType("float");

                    b.Property<double?>("BLASlash")
                        .HasColumnType("float");

                    b.Property<string>("BLAStandard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BLAStrike")
                        .HasColumnType("float");

                    b.Property<double?>("BLAThrust")
                        .HasColumnType("float");

                    b.Property<int?>("BaseAccuracy")
                        .HasColumnType("int");

                    b.Property<int?>("BaseDamage")
                        .HasColumnType("int");

                    b.Property<int?>("BaseStaggerDamage")
                        .HasColumnType("int");

                    b.Property<string>("BaseWeaponID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BlockStability")
                        .HasColumnType("int");

                    b.Property<int?>("BlockStaminaDamage")
                        .HasColumnType("int");

                    b.Property<bool?>("CanBlockRanged")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CritChance")
                        .HasColumnType("float");

                    b.Property<double?>("CritDamageMultiplier")
                        .HasColumnType("float");

                    b.Property<double?>("CritStaggerDamageMultiplier")
                        .HasColumnType("float");

                    b.Property<int?>("DEVPrio")
                        .HasColumnType("int");

                    b.Property<string>("DamageStatMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageTableRow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeflectionRating")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ElementalArmorSetScaleFactor")
                        .HasColumnType("float");

                    b.Property<string>("EquipType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentCategories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentCategoryMultiplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FemaleAppearance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FireJoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GatheringEfficiency")
                        .HasColumnType("float");

                    b.Property<double?>("GatheringMultiplier")
                        .HasColumnType("float");

                    b.Property<string>("GatheringTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManaCostId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialOverride1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialOverride2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialOverride3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialOverride4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MaxGatherEFF")
                        .HasColumnType("float");

                    b.Property<int?>("MaxLoadedAmmo")
                        .HasColumnType("int");

                    b.Property<int?>("MaxStackSize")
                        .HasColumnType("int");

                    b.Property<string>("MeshOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MinGatherEFF")
                        .HasColumnType("float");

                    b.Property<string>("OffHandMannequinTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PhysicalArmorSetScaleFactor")
                        .HasColumnType("float");

                    b.Property<string>("PrimaryHand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangedAttackProfile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequiredDexterity")
                        .HasColumnType("int");

                    b.Property<int?>("RequiredFocus")
                        .HasColumnType("int");

                    b.Property<int?>("RequiredIntelligence")
                        .HasColumnType("int");

                    b.Property<int?>("RequiredStrength")
                        .HasColumnType("int");

                    b.Property<string>("Resistances")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReticleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReticleRayCastDistance")
                        .HasColumnType("int");

                    b.Property<string>("ReticleTargetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ScalingDexterity")
                        .HasColumnType("float");

                    b.Property<double?>("ScalingFocus")
                        .HasColumnType("float");

                    b.Property<double?>("ScalingIntelligence")
                        .HasColumnType("float");

                    b.Property<double?>("ScalingStrength")
                        .HasColumnType("float");

                    b.Property<string>("SkinOverride1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkinOverride2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkinOverride3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkinOverride4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoundTableID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatBonuses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatMultipliers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TierNumber")
                        .HasColumnType("int");

                    b.Property<string>("TooltipAlternateAttackData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TooltipPrimaryAttackData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weaknesses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponEffectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponMasteryCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("WeightOverride")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("WeaponItemDefinitions", "NewWorld");
                });

            modelBuilder.Entity("Infrastructure.Auditing.Trail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AuditTrails", "Auditing");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("Infrastructure.Identity.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", "Identity");
                });

            modelBuilder.Entity("Infrastructure.Identity.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "Identity");
                });

            modelBuilder.Entity("Infrastructure.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ObjectId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", "Identity");
                });

            modelBuilder.Entity("Infrastructure.Identity.ApplicationUserTenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("TentantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTenants", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "Identity");
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.PerkBucketData.PerkBucketPerk", b =>
                {
                    b.HasOne("Domain.Entities.NewWorld.PerkBucketData.PerkBuckets", "PerkBuckets")
                        .WithMany("Perks")
                        .HasForeignKey("PerkBucketsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerkBuckets");
                });

            modelBuilder.Entity("Infrastructure.Identity.ApplicationRoleClaim", b =>
                {
                    b.HasOne("Infrastructure.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Infrastructure.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.NewWorld.PerkBucketData.PerkBuckets", b =>
                {
                    b.Navigation("Perks");
                });
#pragma warning restore 612, 618
        }
    }
}
