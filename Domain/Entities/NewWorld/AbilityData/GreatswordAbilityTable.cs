using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Domain.Entities.NewWorld.AbilityData
{
    public class GreatswordAbilityTable : AuditableEntity, IAggregateRoot
    {
        public string AbilityID { get; set; }
        public string DisplayName { get; set; }
        public string Description { get; set; }
        public string UICategory { get; set; }
        public string UISpellForManaCheck { get; set; }
        public string Icon { get; set; }
        public string StatusEffectIcon { get; set; }
        public string Sound { get; set; }
        public string TelegraphStatusEffect { get; set; }
        public string TelegraphCountOffset { get; set; }
        public string OnEquipStatusEffect { get; set; }
        public bool? EquipWhenUnsheathed { get; set; }
        public string WeaponTag { get; set; }
        public string RequiredAbilityId { get; set; }
        public string RequiredEquippedAbilityId { get; set; }
        public int? TreeId { get; set; }
        public int? TreeRowPosition { get; set; }
        public int? TreeColumnPosition { get; set; }
        public bool? IsActiveAbility { get; set; }
        public bool? IsGlobalAbility { get; set; }
        public bool? UnlockDefault { get; set; }
        public string ScalingStrength { get; set; }
        public string ScalingDexterity { get; set; }
        public string ScalingIntelligence { get; set; }
        public string ScalingSpirit { get; set; }
        public string ScalingConstitution { get; set; }
        public bool? OnKill { get; set; }
        public bool? OnExecuted { get; set; }
        public bool? OnHit { get; set; }
        public bool? OnBlockedHit { get; set; }
        public bool? OnHitBehind { get; set; }
        public bool? OnCrit { get; set; }
        public bool? OnCritTaken { get; set; }
        public bool? OnHeadShot { get; set; }
        public bool? OnLegShot { get; set; }
        public bool? OnHitTaken { get; set; }
        public bool? OnBlockedHitTaken { get; set; }
        public bool? OnBlockBreak { get; set; }
        public bool? OnTargetBlockBreak { get; set; }
        public bool? OnDeath { get; set; }
        public bool? OnDeathsDoor { get; set; }
        public bool? OnHealed { get; set; }
        public bool? OnHealthChanged { get; set; }
        public bool? OnWeaponSwap { get; set; }
        public bool? OnStatusEffectApplied { get; set; }
        public bool? OnInActionLongEnough { get; set; }
        public bool? RequireReaction { get; set; }
        public int? NumSuccessfulHits { get; set; }
        public int? NumConsecutiveHits { get; set; }
        public int? MaxConsecutiveHits { get; set; }
        public bool? TrackHitCount { get; set; }
        public int? MaxTrackedHitCounts { get; set; }
        public string ResetConsecutiveOnSuccess { get; set; }
        public int? NumberOfTrackedHits { get; set; }
        public string NumberOfHitsComparisonType { get; set; }
        public bool? ResetTrackedOnSuccess { get; set; }
        public string AbilityIdToCheckForTrackedHits { get; set; }
        public string DamageIsRanged { get; set; }
        public bool? DamageIsMelee { get; set; }
        public string ForceShowNameTag { get; set; }
        public string HasGritActive { get; set; }
        public string TargetHasGritActive { get; set; }
        public string DamageTableRow { get; set; }
        public string RemoteDamageTableRow { get; set; }
        public string RangedAttackName { get; set; }
        public string AttackType { get; set; }
        public string DamageTypes { get; set; }
        public string DamageCategory { get; set; }
        public bool? IsInCombatState { get; set; }
        public string IsNotInCombatState { get; set; }
        public string CheckOwnedStatusEffects { get; set; }
        public string StatusEffect { get; set; }
        public int? StatusEffectStackSize { get; set; }
        public string StatusEffectComparison { get; set; }
        public string StatusEffectCategories { get; set; }
        public string DontHaveStatusEffect { get; set; }
        public string StatusEffectBeingApplied { get; set; }
        public string CheckStatusEffectsOnTargetOwned { get; set; }
        public string TargetStatusEffect { get; set; }
        public string TargetStatusEffectCategory { get; set; }
        public string? TargetStatusEffectStackSize { get; set; }
        public string TargetStatusEffectComparison { get; set; }
        public string TargetCollisionFilters { get; set; }
        public string MyMarker { get; set; }
        public string TargetMarker { get; set; }
        public int? MyHealthPercent { get; set; }
        public string MyComparisonType { get; set; }
        public int? MyStaminaPercent { get; set; }
        public string MyStaminaComparisonType { get; set; }
        public int? TargetHealthPercent { get; set; }
        public string TargetComparisonType { get; set; }
        public string DistFromDefender { get; set; }
        public string DistComparisonType { get; set; }
        public string NumAroundMe { get; set; }
        public string NumAroundComparisonType { get; set; }
        public string AbilityOnCooldownOptions { get; set; }
        public string AbilitiesOnCooldown { get; set; }
        public string AbilityCooldownComparisonType { get; set; }
        public string AbilityList { get; set; }
        public string AbilityTrigger { get; set; }
        public string InAction { get; set; }
        public double? InActionTime { get; set; }
        public string AfterAction { get; set; }
        public double? BaseDamage { get; set; }
        public double? BaseDamageReduction { get; set; }
        public string CritDamageReduction { get; set; }
        public double? BlockDamage { get; set; }
        public double? BlockDamageReduction { get; set; }
        public double? CritDamage { get; set; }
        public double? CritChance { get; set; }
        public string HeadshotDamage { get; set; }

        [JsonProperty("stagger damage")]
        public string? staggerdamage { get; set; }
        public string StaggerDamageReduction { get; set; }
        public string HitRateDmg { get; set; }
        public string HitRateDmgReduction { get; set; }
        public string HealthDamageMitigation { get; set; }
        public double? ThreatDamage { get; set; }
        public double? ArmorPenetration { get; set; }
        public string PhysicalArmor { get; set; }
        public string ElementalArmor { get; set; }
        public string Knockback { get; set; }
        public string WeaponAccuracy { get; set; }
        public string Health { get; set; }
        public double? DmgPctToHealth { get; set; }
        public string MaxHealth { get; set; }
        public string Mana { get; set; }
        public string MaxMana { get; set; }
        public int? Stamina { get; set; }
        public string DamageTableRowOverride { get; set; }
        public string StatusEffectDamageTableRowOverride { get; set; }
        public bool? ForceStatusEffectDamageTableRow { get; set; }
        public string RangedAttackNameOverride { get; set; }
        public string PowerLevelOverride { get; set; }
        public string EnableCrit { get; set; }
        public bool? CanBlockRangedOverride { get; set; }
        public bool? PerStatusEffectOnSelf { get; set; }
        public int? PerStatusEffectOnSelfMax { get; set; }
        public string PerStatusEffectOnTarget { get; set; }
        public bool? DisableApplyPerStatusEffectStack { get; set; }
        public string ForceTakeStaminaDamage { get; set; }
        public string CastSpell { get; set; }
        public string SelfApplyStatusEffect { get; set; }
        public string OtherApplyStatusEffect { get; set; }
        public string DoNotUnequipSelfAppliedSE { get; set; }
        public string SetPotencyAsCount { get; set; }
        public string MultiplyRemovedByPotency { get; set; }
        public string OnlyChangeOwnedStatusEffects { get; set; }
        public int? NumStatusEffectsToRemove { get; set; }
        public string? NumStatusEffectStacksToRemove { get; set; }
        public string RemoveStatusEffects { get; set; }
        public string StatusEffectsList { get; set; }
        public string StatusEffectCategoriesList { get; set; }
        public string RemoveTargetStatusEffectsList { get; set; }
        public string RemoveTargetStatusEffectCats { get; set; }
        public string? ConsumeTargetStatusEffectMult { get; set; }
        public string StatusEffectDurationReduction { get; set; }
        public string StatusEffectDurationCats { get; set; }
        public int? StatusEffectDurationMod { get; set; }
        public double? StatusEffectDurationMult { get; set; }
        public string TargetStatusEffectDurationList { get; set; }
        public string TargetStatusEffectDurationMod { get; set; }
        public double? ActivationCooldown { get; set; }
        public double? Duration { get; set; }
        public string CooldownId { get; set; }
        public string CDRImmediatelyOptions { get; set; }
        public string ResetCooldownTimers { get; set; }
        public double? CooldownTimer { get; set; }
        public string NumFreeCooldownsPerUse { get; set; }
        public string MaxHitCountMultiplier { get; set; }
        public string SetMannequinTag { get; set; }
        public string SetMannequinTagStatus { get; set; }

    }
}
